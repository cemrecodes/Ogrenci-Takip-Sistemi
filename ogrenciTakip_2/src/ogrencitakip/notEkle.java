package ogrencitakip;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Cemre
 */
public class notEkle extends javax.swing.JFrame {
    /**
     * Creates new form addGrades
     */
    // default constructor
    public notEkle() {
        initComponents();
    }
    // no parametreli constructor
    public notEkle(int no) {
        initComponents();
        ogrenci.no=no;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dersBox = new javax.swing.JComboBox<>();
        notBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sinavBox = new javax.swing.JComboBox<>();
        kaydetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Not Giriş");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ders");

        dersBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dersBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Turkce", "Mat", "İng", "Sosyal", "Fen", "Din" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Not");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Sınav");

        sinavBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sinavBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        kaydetBtn.setBackground(new java.awt.Color(255, 204, 204));
        kaydetBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kaydetBtn.setText("Kaydet");
        kaydetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kaydetBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dersBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(156, 156, 156))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sinavBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kaydetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dersBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(sinavBox))
                        .addGap(65, 65, 65))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(kaydetBtn)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleName("Not Giriş");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kaydetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kaydetBtnMouseClicked
        // notBoxtan gelen deger int'e cevrildi
        int not = parseInt(notBox.getText());
        Object ders = dersBox.getSelectedItem();
        Object sinavNo = sinavBox.getSelectedItem();
        //comboboxlardan gelen degerler stringe cevrildi
        ders = ders.toString();
        //System.out.println(ders);
        sinavNo = sinavNo.toString();
        //veri tabanında dersler tamamen kucuk harf+sinav sayisi oldugu icin secim o forma cevrildi
        String secim = ders.toString().toLowerCase() + sinavNo.toString();
        //System.out.println(secim)
        //notlar veri tabaninda not eklenecek ogrenci olup olmadiginin kontrolu icin bir flag degiskeni olusturuldu
        boolean flag = ogrenci.notlardaOgrAra(ogrenci.no, this);
        
        try
        {   
            // bir dbHelper objesi oluşturuldu
            DbHelper db = new DbHelper();
            // dbHelperin getConnection metoduyla bir baglanti olusturuldu
            Connection myConn = db.getConnection();
            // PreparedStatement olusturuldu
            PreparedStatement preparedStatement=null;
            
            // sirayla secilen ders icin if dongusu olusturuldu
            if ( secim.equals("turkce1") ){
                if (flag == false ){
                // veri tabaninda bulunacak verinin stringi yazildi
                String sqlkod = String.format("INSERT INTO proje.notlar (no,turkce1) VALUES(%d,%d)", ogrenci.no, not);
                // PreparedStatement olusturuldu
                preparedStatement = myConn.prepareStatement(sqlkod);
                // tabloya degerler eklendi
                preparedStatement.executeUpdate(sqlkod);
                // degerler eklenirse messagebox acilacak
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    // veri tabani sorgusu icin string olusturuldu
                    String mysqlQuery = "UPDATE proje.notlar SET turkce1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("mat1") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,mat1) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET mat1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("ing1") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,ing1) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET ing1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("sosyal1") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,sosyal1) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET sosyal1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("fen1") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,fen1) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET fen1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("din1") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,din1) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET din1 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("turkce2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,turkce2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET turkce2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("mat2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,mat2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET mat2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("ing2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,ing2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET ing2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("sosyal2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,sosyal2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET sosyal2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("fen2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,fen2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET fen2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
            if ( secim.equals("din2") ){
                if ( flag == false){
                String sqlkod = String.format("INSERT INTO proje.notlar (no,din2) VALUES(%d,%d)", ogrenci.no, not);
                preparedStatement = myConn.prepareStatement(sqlkod);
                preparedStatement.executeUpdate(sqlkod);
                JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");}
                else{
                    String mysqlQuery = "UPDATE proje.notlar SET din2 = " + not +" WHERE no = " + ogrenci.no ;
                    preparedStatement = myConn.prepareStatement(mysqlQuery);
                    preparedStatement.executeUpdate(mysqlQuery);
                    JOptionPane.showMessageDialog(null ,"Not başarıyla eklendi.");
                }
            }
        }
        
        catch(SQLException err)
        {
            System.out.println(err);
            JOptionPane.showMessageDialog(null, "Not eklenemedi.");
        }

        
    }//GEN-LAST:event_kaydetBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(notEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(notEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(notEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(notEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new notEkle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dersBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton kaydetBtn;
    private javax.swing.JTextField notBox;
    private javax.swing.JComboBox<String> sinavBox;
    // End of variables declaration//GEN-END:variables
}
